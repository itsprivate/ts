{
  "author": "gnulynnux",
  "the_new_excerpt": "Why YSK: You may inadvertently reveal information such as your credit card\nnumber, your password, your email, your name, etc. if you're using blurs/fogs or\npixelization filters to hide the data.\n\nThe problem with blurred or pixelized text is that, to recover it, all you need\nto do is:\n\n 1.…",
  "original_created_utc": 1618255069,
  "localize": [
    {
      "locale": "ja",
      "the_new_excerpt": "なぜYSKなのか: クレジットカード番号やパスワード、電子メール、名前などの情報を、ブラー／フォグを使用している場合、誤って公開してしまうことがあります。\nクレジットカード番号、パスワード、電子メール、氏名などの情報を、ぼかしやモザイクなどの\nピクセル化フィルターを使用してデータを隠している場合、クレジットカード番号やパスワード、電子メール、氏名などの情報が誤って公開されてしまうことがあります。\n\nぼかしやピクセル化されたテキストの問題点は、それを復元するために必要なのは\nしなければならないことです。\n\n 1....",
      "title": "YSK: ピクセル化されたテキストやぼやけたテキストから、テキスト（パスワードやクレジットカード番号など）を復元することができます。機密性の高い情報は完全にブロックしましょう。"
    },
    {
      "locale": "zh",
      "the_new_excerpt": "为什么是YSK：您可能会在无意中透露您的信用卡等信息。\n号码、你的密码、你的电子邮件、你的姓名等，如果你使用的是模糊/雾气或。\n像素化过滤器来隐藏数据。\n\n模糊或像素化文本的问题是，要恢复它，你需要的是\n要做的是\n\n 1.…",
      "title": "YSK：可以从像素化或模糊的文本中恢复文本（如密码或信用卡号码）。如果是敏感信息，请完全屏蔽。"
    },
    {
      "locale": "zh-Hant",
      "the_new_excerpt": "爲什麼是YSK：您可能會在無意中透露您的信用卡等信息。\n號碼、你的密碼、你的電子郵件、你的姓名等，如果你使用的是模糊/霧氣或。\n像素化過濾器來隱藏數據。\n\n模糊或像素化文本的問題是，要恢復它，你需要的是\n要做的是\n\n 1.…",
      "title": "YSK：可以從像素化或模糊的文本中恢復文本（如密碼或信用卡號碼）。如果是敏感信息，請完全屏蔽。"
    }
  ],
  "title": "YSK: Text (such as passwords or credit card numbers) can be recovered from pixelized or blurred text. Block information entirely if it's sensitive.",
  "created_utc": 1618421391,
  "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Why YSK: You may inadvertently reveal information such as your credit card number, your password, your email, your name, etc. if you&#39;re using blurs/fogs or pixelization filters to hide the data.</p>\n\n<p>The problem with blurred or pixelized text is that, to recover it, all you need to do is:</p>\n\n<ol>\n<li><p>Approximate the conditions under which the text is generated (e.g. the angle, color, font, and rendering techniques)</p></li>\n<li><p>Approximate the conditions under which the text is obsfuscated (e.g. the radius of the blur or size of the pixels.)</p></li>\n<li><p>Run through the combinations of characters until your blurred text matches the one in the image.</p></li>\n</ol>\n\n<p>For those familiar with password recovery, they will see this is much faster than brute-forcing a hash, since there is no &quot;avalanche effect&quot;, i.e. the leftmost character won&#39;t impact the blur over the rightmost character.</p>\n\n<p>Source: This is an active area of research, and there is even some open-source software that does it, albeit limited and experimentally: <a href=\"https://github.com/beurtschipper/Depix\">https://github.com/beurtschipper/Depix</a></p>\n\n<p><strong>TLDR: Blank out sensitive data. Don&#39;t use blurs or pixels, since magic can be used to undo your blurs / pixels.</strong></p>\n</div><!-- SC_ON -->",
  "score": 56,
  "permalink": "/r/YouShouldKnow/comments/mpl44m/ysk_text_such_as_passwords_or_credit_card_numbers/",
  "subreddit": "YouShouldKnow",
  "id": "mpl44m",
  "is_self": true,
  "media": null,
  "is_video": false
}