{
  "created_at": "2021-01-20T15:14:32.188Z",
  "title": "Launch HN: Seed (YC W21) – A Fully-Managed CI/CD Pipeline for Serverless",
  "url": null,
  "author": "jayair",
  "points": 177,
  "story_text": "Hi HN, we are Jay and Frank from Seed (<a href=\"https:&#x2F;&#x2F;seed.run\" rel=\"nofollow\">https:&#x2F;&#x2F;seed.run</a>).<p>We&#x27;ve built a service that makes it easy to manage a CI&#x2F;CD pipeline for serverless apps on AWS. There are no build scripts and our custom deployment infrastructure can speed up your deployments almost 100x by incrementally deploying your services and Lambda functions.<p>For some background, Serverless is an execution model where you send a cloud provider (AWS in this case), a piece of code (called an AWS Lambda function). The cloud provider is responsible for executing it and scaling it to respond to the traffic needs. And you are billed for the exact number of milliseconds of execution.<p>Back in 2016 we were really excited to discover serverless and the idea that you could just focus on your code. So we wrote a guide to show people how to build full-stack serverless applications — <a href=\"https:&#x2F;&#x2F;serverless-stack.com\" rel=\"nofollow\">https:&#x2F;&#x2F;serverless-stack.com</a>. But once we started using serverless internally, we started hitting all the operational issues that come with it.<p>Serverless Framework apps are typically made up of multiple services (20-40), where each service might have 10-20 Lambda functions. To deploy a service, you need to package each Lambda function (generate a zip of the source). This can take 3-5 mins. So the entire app might take over 45 mins to deploy!<p>To fix this, people write scripts to deploy services concurrently. But some might need to be deployed after others, or in a specific order. And if a large number of services are deployed concurrently, you tend to run into rate-limit errors (at least in the AWS case)—meaning your scripts need to handle retries. Your services might also be deployed to multiple environments in different AWS accounts, or regions. It gets complicated! Managing a CI&#x2F;CD pipeline for these apps can be difficult, and the build scripts can get large and hard to maintain.<p>We spoke to folks in the community who were using serverless in production and found that this was a common issue, so we decided to fix it. We&#x27;ve built a fully-managed CI&#x2F;CD pipeline specifically for Serverless Framework and CDK apps on AWS. We support deploying to multiple environments, regions, using most common git workflows. There&#x27;s no need for a build script. You connect your git repo, point to the services, add your environments, and specify the order in which you want your services to be deployed. And Seed does the rest. It&#x27;ll concurrently and reliably (handle any retries) deploy all your services. It&#x27;ll also remove the services reliably when a branch is removed or a PR is closed.<p>Recently we launched incremental deploys, which can really speed up deployments. We do this by checking which services have been updated, and which of the Lambda functions in those services need to be deployed. We internally store the checksums for the Lambda function packages and concurrently do these checks. We then deploy only those Lambda functions that&#x27;ve been updated. We&#x27;ve also optimized the way the dependencies (node_modules) in your apps are cached and installed. We download and restore them asynchronously, so they are not blocking the build steps.<p>Since our launch in 2017, hundreds of teams rely on Seed everyday to deploy their serverless apps. Our pricing plans are based on the number of build minutes you use and we do not charge extra for the number of concurrent builds. We also have a great free tier — <a href=\"https:&#x2F;&#x2F;seed.run&#x2F;pricing\" rel=\"nofollow\">https:&#x2F;&#x2F;seed.run&#x2F;pricing</a><p>Thank you for reading about us. We would love to hear what you think and how we can improve Seed, or serverless in general!",
  "comment_text": null,
  "num_comments": 96,
  "story_id": null,
  "story_title": null,
  "story_url": null,
  "parent_id": null,
  "created_at_i": 1611074674,
  "_tags": [
    "story",
    "author_jayair",
    "story_25835280",
    "front_page"
  ],
  "objectID": "25835280",
  "_highlightResult": {
    "title": {
      "value": "Launch HN: Seed (YC W21) – A Fully-Managed CI/CD Pipeline for Serverless",
      "matchLevel": "none",
      "matchedWords": []
    },
    "author": {
      "value": "jayair",
      "matchLevel": "none",
      "matchedWords": []
    },
    "story_text": {
      "value": "Hi HN, we are Jay and Frank from Seed (<a href=\"https://seed.run\" rel=\"nofollow\">https://seed.run</a>).<p>We've built a service that makes it easy to manage a CI/CD pipeline for serverless apps on AWS. There are no build scripts and our custom deployment infrastructure can speed up your deployments almost 100x by incrementally deploying your services and Lambda functions.<p>For some background, Serverless is an execution model where you send a cloud provider (AWS in this case), a piece of code (called an AWS Lambda function). The cloud provider is responsible for executing it and scaling it to respond to the traffic needs. And you are billed for the exact number of milliseconds of execution.<p>Back in 2016 we were really excited to discover serverless and the idea that you could just focus on your code. So we wrote a guide to show people how to build full-stack serverless applications — <a href=\"https://serverless-stack.com\" rel=\"nofollow\">https://serverless-stack.com</a>. But once we started using serverless internally, we started hitting all the operational issues that come with it.<p>Serverless Framework apps are typically made up of multiple services (20-40), where each service might have 10-20 Lambda functions. To deploy a service, you need to package each Lambda function (generate a zip of the source). This can take 3-5 mins. So the entire app might take over 45 mins to deploy!<p>To fix this, people write scripts to deploy services concurrently. But some might need to be deployed after others, or in a specific order. And if a large number of services are deployed concurrently, you tend to run into rate-limit errors (at least in the AWS case)—meaning your scripts need to handle retries. Your services might also be deployed to multiple environments in different AWS accounts, or regions. It gets complicated! Managing a CI/CD pipeline for these apps can be difficult, and the build scripts can get large and hard to maintain.<p>We spoke to folks in the community who were using serverless in production and found that this was a common issue, so we decided to fix it. We've built a fully-managed CI/CD pipeline specifically for Serverless Framework and CDK apps on AWS. We support deploying to multiple environments, regions, using most common git workflows. There's no need for a build script. You connect your git repo, point to the services, add your environments, and specify the order in which you want your services to be deployed. And Seed does the rest. It'll concurrently and reliably (handle any retries) deploy all your services. It'll also remove the services reliably when a branch is removed or a PR is closed.<p>Recently we launched incremental deploys, which can really speed up deployments. We do this by checking which services have been updated, and which of the Lambda functions in those services need to be deployed. We internally store the checksums for the Lambda function packages and concurrently do these checks. We then deploy only those Lambda functions that've been updated. We've also optimized the way the dependencies (node_modules) in your apps are cached and installed. We download and restore them asynchronously, so they are not blocking the build steps.<p>Since our launch in 2017, hundreds of teams rely on Seed everyday to deploy their serverless apps. Our pricing plans are based on the number of build minutes you use and we do not charge extra for the number of concurrent builds. We also have a great free tier — <a href=\"https://seed.run/pricing\" rel=\"nofollow\">https://seed.run/pricing</a><p>Thank you for reading about us. We would love to hear what you think and how we can improve Seed, or serverless in general!",
      "matchLevel": "none",
      "matchedWords": []
    }
  },
  "original_created_at": "2021-01-19T16:44:34.000Z",
  "image": "",
  "localize": [
    {
      "locale": "zh",
      "title": "发布HN：Seed (YC W21)--面向无服务器的全面管理的CI/CD流水线"
    },
    {
      "locale": "zh-Hant",
      "title": "發佈HN：Seed (YC W21)--面向無服務器的全面管理的CI/CD流水線"
    }
  ],
  "source_updated_at": 1611311232498
}